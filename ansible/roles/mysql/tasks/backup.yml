---
# tasks file for mysql

- name: backup | Export temp mysql dump 'replica.sql' for {{ ansible_hostname }} server
  shell: mysqldump -h {{ ip_address['replica'] }} --all-databases --triggers --routines --master-data > /data/replica.sql
  ignore_errors: yes

- name: backup | Master reset
  command: mysql -e "RESET MASTER;"
  ignore_errors: yes

- name: backup | Import mysql dump 'replica.sql'
  command: mysql -e "SOURCE /data/replica.sql;"
  ignore_errors: yes

- name: backup | Connect mysql to replica server
  command: mysql -e 'CHANGE MASTER TO MASTER_HOST="{{ ip_address['replica'] }}", MASTER_PORT={{ mysql_port }}, MASTER_USER="{{ mysql_repl_user }}", MASTER_PASSWORD="{{ mysql_repl_password }}", MASTER_AUTO_POSITION=1;'
  ignore_errors: yes

- name: backup | Start slave
  command: mysql -e "START SLAVE;"
  ignore_errors: yes

- name: replica | Add config line 'read_only'
  blockinfile:
    path: /etc/my.cnf.d/01-base.cnf
    block: |
      read_only = on
      super_read_only = on

- name: backup | Restart MySQL service
  service:
    name: mysql
    state: restarted

- name: backup | Delete temp mysql dump 'replica.sql'
  file:
    path: /data/replica.sql
    state: absent

- name: backup | Copy systemd backup files
  template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    mode: 0644
  loop:
  - mysql-backup.service
  - mysql-backup.timer

- name: backup | Enable a timer unit for mysql-backup
  systemd:
    name: mysql-backup.timer
    state: started
    enabled: yes

